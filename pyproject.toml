[project]
name = "trade-dashboard"
version = "0.1.0"
requires-python = "~=3.12"
dependencies = [
    "ipykernel",
    "python-dotenv",
    "pandas",
    "ruff",
    "mypy",
    "taskipy",
    "types-requests",
    "boto3",
    "mypy-boto3-dynamodb",
    "boto3-stubs",
]

# uv

[tool.uv]
index-strategy = "unsafe-best-match"  # パッケージのインデックス戦略を安定性<最新かつ互換性ありに指定
find-links = []  # パッケージの探索先URLを指定

# mypy

[tool.mypy]
python_version = "3.12"
show_error_context = true  # エラー時のメッセージを詳細表示
show_column_numbers = true  # エラー発生箇所の行数/列数を表示
disallow_untyped_defs = true  # 関数定義の引数/戻り値に型アノテーション必須
no_implicit_optional = true  # デフォルト引数に None を取る場合型アノテーションに Optional 必須
check_untyped_defs = true  # 型注釈がない関数やメソッドに対して型チェックを行う
warn_redundant_casts = true  # 冗長なキャストに警告
ignore_missing_imports = true  # 型情報のない外部ライブラリ利用を許容
strict = true  # 厳密型チェック

# Ruff

[tool.ruff]
target-version = "py312"
line-length = 120
lint.ignore = [
    "D415",  # First line should end with a period, question mark, or exclamation pointRuff
    "D100",  # Missing docstring in public moduleRuff
]
extend-include = ["*.ipynb"]
lint.select = [
    # https://docs.astral.sh/ruff/rules/
    "F",  # pyflakes
    "E",  # pycodestyle
    "W",  # pycodestyle warnings
    "I",  # isort
    "D",  # pydocstyle
    "N",  # pep8-naming
    "C90",  # mccabe
    "S",  # flake8-bandit
]
lint.fixable = ["ALL"]  # `--fix` オプション使用時有効化されたルールで自動修正
lint.unfixable = []  # 自動修正から除外するルール
lint.dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"  # アンダースコアで始まる未使用変数を許可

[tool.ruff.lint.pydocstyle]  # Pythonのdocstringのスタイル設定
convention = "google"

[tool.ruff.lint.mccabe]
max-complexity = 10  # コードの複雑度

# Taskipy

[tool.taskipy.tasks]
register = "python src/main.py register"
post = "python src/main.py post"
mypy = "mypy src/"
ruff_lint = "ruff check src/"
ruff_fix = "ruff check --fix src/"
lint = "task mypy || task ruff_lint"
fix = "task mypy || task ruff_fix"
test_vct = "python src/service/vectorize.py"